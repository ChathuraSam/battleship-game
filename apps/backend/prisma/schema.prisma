generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Game {
//   id        String     @id @default(uuid())
//   status    GameStatus @default(WAITING)
//   createdAt DateTime   @default(now())
//   updatedAt DateTime   @updatedAt

//   players Player[]
//   moves   Move[]
// }

model Player {
  id        String   @id @default(uuid())
  gameId    String? // Nullable when not in a game
  isHost    Boolean  @default(false)
  board     Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // game Game? @relation(fields: [gameId], references: [id])
  // moves Move[]
}

// model Move {
//   id        String   @id @default(uuid())
//   gameId    String
//   playerId  String
//   x         Int
//   y         Int
//   hit       Boolean
//   createdAt DateTime @default(now())

//   game   Game   @relation(fields: [gameId], references: [id])
//   player Player @relation(fields: [playerId], references: [id])
// }

enum GameStatus {
  WAITING
  IN_PROGRESS
  COMPLETED
}
